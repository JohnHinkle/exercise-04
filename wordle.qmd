---
title: "exercise-04: wordle"
format: html
editor: visual
authors: Thi Yen Do and John Hinkle
---

## Create function 'load_dictionary()'

```{r}
load_dictionary <- function(f) {
  read.table(f, header = TRUE, sep = "\t", stringsAsFactors = FALSE, fill = TRUE)
}
```

## Create two lists, "valid_list" and "solution_list"

```{r}
valid_list <- load_dictionary("collins-scrabble-words-2019.txt")
solution_list <- load_dictionary("google-10000-english-usa-no-swears.txt")
```

## Check that the lists contain characters

```{r}
str(valid_list)
str(solution_list)
```

## Update "solution_list" to only include words included in "valid_list" using the 'intersect()' function

```{r}
solution_list <- intersect(solution_list$words, valid_list$words)
```

## Create 'pick_solution()'

```{r}
pick_solution <- function(solution_list, word_length = 5) {
  subset(solution_list, nchar(solution_list) == word_length) |>
  sample(size = 1) |>
  strsplit("")
}
solution <- pick_solution(solution_list) # variable that contains the solution
```

## Create 'evaluate_guess()' THIS STEP IS INCOMPLETE

FYI- whenever you are using any function, you do not need to explicitly call the default arguments. For example, when using strsplit(), fixed, perl, and useBytes are all set to be FALSE. This means that you do not have to type out 'strsplit(x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE)' you can just say strsplit(x, split). If you wanted to set, let's say perl to be TRUE, then you would need to type out 'strsplit(x, split, perl = TRUE).

```{r}
evaluate_guess <- function(guess, answer) {
  word_length <- length(answer)
}
```

## Create 'play_wordle()' THIS STEP IS INCOMPLETE

```{r}
play_wordle <- function(solution, solution_list, word_length = 5, num_guesses = 6) {
  print(paste("You have", num_guesses, "chances to guess a word of length", word_length))
  guess_count <- 0
  letters <- LETTERS
  while (num_guesses > guess_count) {
    guess_count <- guess_count + 1
    guess <- readline("Enter your guess, then press <enter>: ")
    guess <- toupper(guess)
    while (nchar(guess) != word_length) {
      guess <- readline("Guess must be five letters long!")
    }
    
  }
}
```
